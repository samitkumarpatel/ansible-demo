- hosts: azure
  become: true
  environment:
      LC_ALL: C 
  vars:
    container_name: jenkins01 
  tasks:
    - name: ping
      ping:
    
    - name: apt update
      apt:
        upgrade: dist
    
    - name: Install required system packages
      apt: 
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop: 
        - "apt-transport-https"
        - "ca-certificates"
        - "curl"
        - "software-properties-common"
        - "python3-pip"
        - "python-pip"
        - "virtualenv"
        - "python3-setuptools"
        - "docker-compose"
        - "openjdk-8-jdk"

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt:         
        name: docker-ce
        update_cache: yes
        state: latest
    
    - name: 'add users to docker group'
      user:
        name: "{{ ansible_user }}"
        groups: "docker"
        append: yes

    - name: restart docker service
      service:
        name: docker
        state: restarted
    
    - name: Install Docker Module for Python
      pip:
        name: "{{ item }}"
        executable: pip
      loop:
        - "docker"
        - "docker-py"
    # - name: Log into private registry and force re-authorization
    #   docker_login:
    #     registry: your.private.registry.io
    #     username: yourself
    #     password: secrets3
    #     reauthorize: yes
    
    #docker-swarm
    - name: Init a new swarm with default parameters
      docker_swarm:
        advertise_addr: "{{ ansible_default_ipv4.address }}"
        state: present
      register: swarm
    
    - debug:
        msg: "{{ swarm }}"
    
    - name: Create a volume
      docker_volume:
        name: jenkins_home

    - name: docker swarm service
      docker_swarm_service:
        name: jenkins
        image: jenkins/jenkins:lts
        publish:
        - published_port: 8080
          target_port: 8080
        - published_port: 50000
          target_port: 50000
        replicas: 2
        mounts:
          - type: volume
            source: jenkins_home
            target: /var/jenkins_home
        env:
          - JAVA_OPTS="-Djenkins.install.runSetupWizard=false"
      register: output
    
    - debug:
        var: output
    
    - name: Make sure jenkins started
      uri:
        url: http://localhost:8080/login
        return_content: true
      register: response
      until: "'Welcome to Jenkins!' in response.content"
      retries: 18
      delay: 10
    
    - name: fact
      set_fact:
        admin_pass: "{{lookup('password', '/tmp/passwordfile length=8 chars=digits')}}"
    
    # http://localhost:8080/securityRealm/addUser - will allow you to create a admin user
    
    # - name: Create a admin jenkins user
    #   uri:
    #     url: http://localhost:8080/securityRealm/addUser
    #     body:
    #       username: "{{ ansible_user }}"
    #       password1: "{{ admin_pass }}"
    #       password2: "{{ admin_pass }}"
    #       fullname: Admin A
    #       email: admin@a.net
    #       Jenkins-Crumb: ee277285b1ec9ddacd71f38423abf91e69d4a625178cec81f8b6139b76cc75a1